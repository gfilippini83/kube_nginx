#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    upstream app-ui {

    server app-ui:4000;

    }
    include       mime.types;
    default_type  application/octet-stream;

    client_max_body_size 20M;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    log_format  ecarp-nginx '$remote_addr - $remote_user [$msec] [$time_local] "$request_method $request_uri" $status $body_bytes_sent "$server_name" "$server_addr" "$http_referer" "$http_user_agent" "$http_x_forwarded_for" "$ssl_client_verify" "$ssl_client_s_dn" "$host"';

    #access_log  /var/log/nginx/access.log;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
            resolver 127.0.0.1;
            listen  80 default_server;
            listen [::]:80 default_server;
            server_name    _;
            return         301 https://$host$request_uri;
        }

    server {
        resolver 127.0.0.1;
        listen       443 ssl;
        server_name  _;

        #charset koi8-r;

        # if ($http_user_agent ~ Chrome ) {
        #         return 301 https://$host/custom_412.html;
        #     }


        #access_log  logs/host.access.log  main;
        access_log  /var/log/nginx/ecarp_nginx.log ecarp-nginx;


       	ssl on;
	      ssl_certificate     	 certs/chunkedwedge.com.crt; #Location of the server cert.
        ssl_certificate_key  	 certs/chunkedwedge.com.key; #Location of the server cert key.
        ssl_client_certificate 	 certs/CA.crt; #Home Depot Root Cert.
        ssl_verify_depth 3;
        ssl_verify_client off; # This setting prompts for the client certs.

        location / {

        # if ($http_user_agent !~ Chrome ) {
        #     return 302 https://$host/custom_412.html;
        #      }
            proxy_pass https://app-ui;

	         # proxy_intercept_errors on;
           # root   http://localhost:80;
           # index  index.html index.htm;

        #    if ($ssl_client_verify != SUCCESS){
        #       return 302 https://$host/custom_400.html;
        #    }


        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #

        #show error page, if no client certificate sent.
        error_page 495 496 497 /custom_400.html;
        location = /custom_400.html {
            root   html;
        }
        error_page 412 /custom_412.html;
        location = /custom_412.html {
            root   html;
        }

        error_page 500 501 502 503  /custom_502.html;
        location = /custom_502.html {
            root html;
        }

        error_page 504  /custom_504.html;
        location = /custom_504.html {
            root html;
        }

        error_page 400 401 402 403 404 405   /custom_404.html;
        location = /custom_404.html {
            root html;
            #internal;
            #allow all;
        }

        # error_page 400 401 402  /custom_404.html;
        # location = /custom_404.html {
        #     root html;
        #     #internal;
        #     #allow all;
        # }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
